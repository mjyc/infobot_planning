#!/usr/bin/python

import rospy
import actionlib
import sys
import tf
from move_base_msgs.msg import *
from infobot_elevator.msg import *


def send_move_base_goal(x, y, theta):
    action_client = actionlib.SimpleActionClient("move_base", MoveBaseAction)
    rospy.loginfo("Waiting for move_base action server...")
    action_client.wait_for_server()
    rospy.loginfo("Done waiting for move_base action server!")

    goal = MoveBaseGoal()
    goal.target_pose.header.stamp = rospy.get_rostime()
    goal.target_pose.header.frame_id = "map"
    goal.target_pose.pose.position.x = x
    goal.target_pose.pose.position.y = y
    goal.target_pose.pose.position.z = 0.0
    quaternion = tf.transformations.quaternion_from_euler(0, 0, theta)
    goal.target_pose.pose.orientation.x = quaternion[0]
    goal.target_pose.pose.orientation.y = quaternion[1]
    goal.target_pose.pose.orientation.z = quaternion[2]
    goal.target_pose.pose.orientation.w = quaternion[3]

    action_client.send_goal(goal)
    action_client.wait_for_result()
    rospy.loginfo("Final Goal State: " + str(action_client.get_state()))

    return action_client.get_state()


def send_move_to_floor_goal(floor_id, door_timeout):
    client = actionlib.SimpleActionClient("/elevator_cse268/move_to_floor", MoveToFloorAction)
    rospy.loginfo("Waiting for /elevator_cse268/move_to_floor action server...")
    client.wait_for_server()
    rospy.loginfo("Done waiting for /elevator_cse268/move_to_floor action server!")

    # Send goal
    goal = MoveToFloorGoal()
    goal.floor_id = floor_id
    if door_timeout:
        goal.hold_door_open = True
        goal.door_timeout = float(door_timeout)
    else:
        goal.hold_door_open = False
        goal.door_timeout = 0.0

    client.send_goal(goal)
    client.wait_for_result()
    rospy.loginfo("Final Goal State: " + str(client.get_state()))

    return client.get_state()


def main():
    rospy.init_node("elevator_transition")

    # Go to first position
    if send_move_base_goal(0.516238, -1.52253, -1.5758) != 3:
        rospy.logerr("Step 1 Failed.")
        sys.exit(-1)
    if send_move_to_floor_goal("1", -1) != 3:
        rospy.logerr("Step 2 Failed.")
        sys.exit(-1)
    if send_move_base_goal(0.4782, -4.075, 1.5658) != 3:
        rospy.logerr("Step 3 Failed.")
        sys.exit(-1)
    if send_move_to_floor_goal("2", -1) != 3:
        rospy.logerr("Step 4 Failed.")
        sys.exit(-1)
    if send_move_base_goal(0.516238, -1.52253, -1.5758) != 3:
        rospy.logerr("Step 5 Failed.")
        sys.exit(-1)

# ------------------------------------------------------------
if __name__ == '__main__':
    main()
